#!/bin/bash
#SBATCH -A xdy@gpu
#SBATCH --job-name=deepmass_training%j   # nom du job
#SBATCH --ntasks=1                    # nombre de tâche MPI
#SBATCH --ntasks-per-node=1           # nombre de tâche MPI par noeud
#SBATCH --gres=gpu:1                  # nombre de GPU à réserver par nœud
#SBATCH --cpus-per-task=10            # nombre de coeurs à réserver par tâche
# /!\ Attention, la ligne suivante est trompeuse mais dans le vocabulaire
# de Slurm "multithread" fait bien référence à l'hyperthreading.
#SBATCH --hint=nomultithread          # on réserve des coeurs physiques et non logiques
#SBATCH --distribution=block:block    # on épingle les tâches sur des coeurs contigus
#SBATCH --time=40:00:00               # temps d’exécution maximum demande (HH:MM:SS)
#SBATCH --qos=qos_gpu-t4
#SBATCH --output=deepmass_training%j.out # nom du fichier de sortie
#SBATCH --error=deepmass_training%j.err  # nom du fichier d'erreur (ici commun avec la sortie)

set -x

cd $WORK/repo/jl/scripts

module purge
module load tensorflow-gpu/py3/2.5.0

srun python ./train_deepmass.py --batch_size=28
